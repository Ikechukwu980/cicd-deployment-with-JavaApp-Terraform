pipeline {
    agent any

    tools {
        maven 'maven3'
    }
    
    environment {
        registry = '220894557754.dkr.ecr.us-east-1.amazonaws.com/springboot-app'
    }
    
    stages {
        stage('checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/Ikechukwu980/microservice-eks-jenkins']]])
            }
        }
        
        stage ('Build jar') {
            steps {
                sh "mvn clean install"    
            }  
        }
        
        stage ('build image') {
            steps {
                script {
                    docker.build(registry)
                }
            }
        }
        
        stage ('push in to ECR') {
            steps {
                sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 220894557754.dkr.ecr.us-east-1.amazonaws.com"
                sh "docker push 220894557754.dkr.ecr.us-east-1.amazonaws.com/springboot-app:latest"
            }
        }
        
        stage ('kubernetes deploy') {
            steps {
                withKubeConfig([caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', restrictKubeConfigAccess: false, serverUrl: '']) {
                    sh "kubectl apply -f eks-deploy-k8s.yml"    
                }
            }
        }
    }
}
